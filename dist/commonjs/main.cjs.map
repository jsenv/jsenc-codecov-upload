{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../node_modules/@jsenv/core/src/internal/import-meta/import-meta-url-commonjs.js",
    "../../src/uploadCoverage.js"
  ],
  "sourcesContent": [
    "/* global __filename */\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nconst url = filenameContainsBackSlashes\n  ? `file:///${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport default url\n",
    "import { createRequire } from \"module\"\nimport { assertAndNormalizeDirectoryUrl, resolveUrl, urlToFileSystemPath } from \"@jsenv/util\"\n\nconst require = createRequire(import.meta.url)\nconst codecov = require(\"codecov\")\n\nconst upload = codecov.handleInput.upload\n\nexport const uploadCoverage = ({\n  projectDirectoryUrl,\n  coverageJsonFileRelativeUrl = \"./coverage/coverage.json\",\n  token = process.env.CODECOV_TOKEN,\n  ...rest\n}) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n  const coverageJsonFileUrl = resolveUrl(coverageJsonFileRelativeUrl, projectDirectoryUrl)\n\n  const options = {\n    ...rest,\n    ...(process.env.GITHUB_REPOSITORY ? readOptionsFromGithubAction() : {}),\n    token,\n    file: urlToFileSystemPath(coverageJsonFileUrl),\n    root: urlToFileSystemPath(projectDirectoryUrl),\n  }\n\n  return new Promise((resolve, reject) => {\n    // https://github.com/codecov/codecov-node/blob/023d204c671bc7d66b72261d2da07f2b72da2669/lib/codecov.js#L238\n    upload(\n      {\n        options,\n      },\n      resolve,\n      reject,\n    )\n  })\n}\n\n// https://help.github.com/en/articles/virtual-environments-for-github-actions#environment-variables\n// https://github.com/codecov/codecov-node/blob/a7014d2e29d80424a240d8fa7d544e0ccf1601d0/lib/services/travis.js#L8\nconst readOptionsFromGithubAction = () => {\n  return {\n    commit: process.env.GITHUB_SHA,\n    build: process.env.GITHUB_WORKFLOW,\n    branch: process.env.GITHUB_REF,\n    job: process.env.GITHUB_ACTION,\n    pr: process.env.GITHUB_EVENT_NAME === \"pull_request\" ? getPullRequestNumber() : undefined,\n    slug: process.env.GITHUB_REPOSITORY,\n    root: process.env.GITHUB_WORKSPACE,\n  }\n}\n\n// or maybe https://github.community/t5/GitHub-Actions/GitHub-Actions-no-way-to-get-PR-number-on-push-event/td-p/23433\nconst getPullRequestNumber = () => {\n  const ref = process.env.GITHUB_REF\n  const pullPrefix = \"refs/pull/\"\n  const pullRequestNumberStartIndex = ref.indexOf(pullPrefix)\n  if (pullRequestNumberStartIndex === -1) return undefined\n  const afterPull = ref.slice(pullRequestNumberStartIndex + pullPrefix.length)\n  const slashAfterPullIndex = afterPull.indexOf(\"/\")\n  if (slashAfterPullIndex === -1) return undefined\n  const pullRequestNumberString = afterPull.slice(0, slashAfterPullIndex)\n  return Number(pullRequestNumberString)\n}\n\n/**\n * Example of process.env for a pull request\n *\n * {\n *   process.env.HOME: '/home/runner',\n *   process.env.GITHUB_WORKFLOW: 'ci',\n *   process.env.GITHUB_ACTION: 'run',\n *   process.env.GITHUB_ACTOR: 'dmail',\n *   process.env.GITHUB_REPOSITORY: 'jsenv/jsenv-codecov-upload',\n *   process.env.GITHUB_EVENT_NAME: 'pull_request',\n *   process.env.GITHUB_EVENT_PATH: '/home/runner/work/_temp/_github_workflow/event.json',\n *   process.env.GITHUB_WORKSPACE: '/home/runner/work/jsenv-codecov-upload/jsenv-codecov-upload',\n *   process.env.GITHUB_SHA: 'e42f8c0500aa7396f5b4fd893b4fdade8b31f354',\n *   process.env.GITHUB_REF: 'refs/pull/1/merge',\n *   process.env.GITHUB_HEAD_REF: 'github-actions',\n *   process.env.GITHUB_BASE_REF: 'master'\n * }\n *\n */\n"
  ],
  "names": [
    "filenameContainsBackSlashes",
    "__filename",
    "indexOf",
    "url",
    "replace",
    "require",
    "createRequire",
    "codecov",
    "upload",
    "handleInput",
    "uploadCoverage",
    "projectDirectoryUrl",
    "coverageJsonFileRelativeUrl",
    "token",
    "process",
    "env",
    "CODECOV_TOKEN",
    "rest",
    "assertAndNormalizeDirectoryUrl",
    "coverageJsonFileUrl",
    "resolveUrl",
    "options",
    "GITHUB_REPOSITORY",
    "readOptionsFromGithubAction",
    "file",
    "urlToFileSystemPath",
    "root",
    "Promise",
    "resolve",
    "reject",
    "commit",
    "GITHUB_SHA",
    "build",
    "GITHUB_WORKFLOW",
    "branch",
    "GITHUB_REF",
    "job",
    "GITHUB_ACTION",
    "pr",
    "GITHUB_EVENT_NAME",
    "getPullRequestNumber",
    "undefined",
    "slug",
    "GITHUB_WORKSPACE",
    "ref",
    "pullPrefix",
    "pullRequestNumberStartIndex",
    "afterPull",
    "slice",
    "length",
    "slashAfterPullIndex",
    "pullRequestNumberString",
    "Number"
  ],
  "mappings": ";;;;;;;AAAA;AAEA,MAAMA,2BAA2B,GAAGC,UAAU,CAACC,OAAX,CAAmB,IAAnB,IAA2B,CAAC,CAAhE;AAEA,MAAMC,GAAG,GAAGH,2BAA2B,GAClC,WAAUC,UAAU,CAACG,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAA+B,EADP,GAElC,UAASH,UAAW,EAFzB;;ACDA,MAAMI,SAAO,GAAGC,sBAAa,KAA7B;;AACA,MAAMC,OAAO,GAAGF,SAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMG,MAAM,GAAGD,OAAO,CAACE,WAAR,CAAoBD,MAAnC;MAEaE,cAAc,GAAG,CAAC;AAC7BC,EAAAA,mBAD6B;AAE7BC,EAAAA,2BAA2B,GAAG,0BAFD;AAG7BC,EAAAA,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAHS;AAI7B,KAAGC;AAJ0B,CAAD,KAKxB;AACJN,EAAAA,mBAAmB,GAAGO,mCAA8B,CAACP,mBAAD,CAApD;AACA,QAAMQ,mBAAmB,GAAGC,eAAU,CAACR,2BAAD,EAA8BD,mBAA9B,CAAtC;AAEA,QAAMU,OAAO,GAAG,EACd,GAAGJ,IADW;AAEd,QAAIH,OAAO,CAACC,GAAR,CAAYO,iBAAZ,GAAgCC,2BAA2B,EAA3D,GAAgE,EAApE,CAFc;AAGdV,IAAAA,KAHc;AAIdW,IAAAA,IAAI,EAAEC,wBAAmB,CAACN,mBAAD,CAJX;AAKdO,IAAAA,IAAI,EAAED,wBAAmB,CAACd,mBAAD;AALX,GAAhB;AAQA,SAAO,IAAIgB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACArB,IAAAA,MAAM,CACJ;AACEa,MAAAA;AADF,KADI,EAIJO,OAJI,EAKJC,MALI,CAAN;AAOD,GATM,CAAP;AAUD;AAGD;;AACA,MAAMN,2BAA2B,GAAG,MAAM;AACxC,SAAO;AACLO,IAAAA,MAAM,EAAEhB,OAAO,CAACC,GAAR,CAAYgB,UADf;AAELC,IAAAA,KAAK,EAAElB,OAAO,CAACC,GAAR,CAAYkB,eAFd;AAGLC,IAAAA,MAAM,EAAEpB,OAAO,CAACC,GAAR,CAAYoB,UAHf;AAILC,IAAAA,GAAG,EAAEtB,OAAO,CAACC,GAAR,CAAYsB,aAJZ;AAKLC,IAAAA,EAAE,EAAExB,OAAO,CAACC,GAAR,CAAYwB,iBAAZ,KAAkC,cAAlC,GAAmDC,oBAAoB,EAAvE,GAA4EC,SAL3E;AAMLC,IAAAA,IAAI,EAAE5B,OAAO,CAACC,GAAR,CAAYO,iBANb;AAOLI,IAAAA,IAAI,EAAEZ,OAAO,CAACC,GAAR,CAAY4B;AAPb,GAAP;AASD,CAVD;;;AAaA,MAAMH,oBAAoB,GAAG,MAAM;AACjC,QAAMI,GAAG,GAAG9B,OAAO,CAACC,GAAR,CAAYoB,UAAxB;AACA,QAAMU,UAAU,GAAG,YAAnB;AACA,QAAMC,2BAA2B,GAAGF,GAAG,CAAC1C,OAAJ,CAAY2C,UAAZ,CAApC;AACA,MAAIC,2BAA2B,KAAK,CAAC,CAArC,EAAwC,OAAOL,SAAP;AACxC,QAAMM,SAAS,GAAGH,GAAG,CAACI,KAAJ,CAAUF,2BAA2B,GAAGD,UAAU,CAACI,MAAnD,CAAlB;AACA,QAAMC,mBAAmB,GAAGH,SAAS,CAAC7C,OAAV,CAAkB,GAAlB,CAA5B;AACA,MAAIgD,mBAAmB,KAAK,CAAC,CAA7B,EAAgC,OAAOT,SAAP;AAChC,QAAMU,uBAAuB,GAAGJ,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBE,mBAAnB,CAAhC;AACA,SAAOE,MAAM,CAACD,uBAAD,CAAb;AACD,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"
}